---
- name: OS-specific variables
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - vars
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_lsb.id }}.yml"

- name: OS-specific tasks
  include_tasks: "{{ lookup('first_found', tasks) }}"
  vars:
    tasks:
      paths:
        - tasks
      files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "{{ ansible_lsb.id }}.yml"

- name: Install packages
  ansible.builtin.package:
    name: "{{ docker_packages | union(docker_packages_dist) }}"
    state: "{{ 'absent' if docker_remove else 'present' }}"

- name: Enable docker
  ansible.builtin.service:
    name: docker
    enabled: yes
    state: started
  ignore_errors: "{{ ansible_check_mode }}"

- name: Install scripts
  ansible.builtin.copy:
    src: cleanup_dangling.sh
    dest: /etc/docker/cleanup_dangling.sh
    owner: root
    group: root
    mode: "0755"

- name: Schedule image cleanup
  ansible.builtin.cron:
    name: cleanup_dangling
    minute: "37"
    hour: "{{ docker_cleanup_time | default('0', true) }}"
    weekday: "{{ docker_cleanup_day | default(omit) }}"
    user: root
    job: /etc/docker/cleanup_dangling.sh
    cron_file: ansible_docker
    state: "{{ 'present' if docker_cleanup_time != '' else 'absent' }}"
